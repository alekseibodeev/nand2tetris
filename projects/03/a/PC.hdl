// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    // Increment feedback loop value
    Inc16(in=feedback, out=incValue);
    // Apply reset -> load -> inc
    Not(in=reset, out=notReset);
    And(a=load, b=notReset, out=isLoad);
    Not(in=load, out=notLoad);
    And(a=notReset, b=notLoad, out=notLoadAndNotReset);
    And(a=inc, b=notLoadAndNotReset, out=isInc);
    Mux4Way16(
      a=false,
      b=in,
      c=incValue,
      sel[0]=isLoad,
      sel[1]=isInc,
      out=inRegister
    );
    // Compute Register's load bit
    Or(a=inc, b=load, out=incOrLoad);
    Or(a=incOrLoad, b=reset, out=incOrLoadOrReset);
    Register(in=inRegister, load=incOrLoadOrReset, out=out, out=feedback);
}
